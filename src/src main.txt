import './styles.css';

// Import all other modules
import { initApp } from './ui';
import { initSRS } from './srs';
import { initStore } from './store';
import { initTTS } from './tts';
import { initStrokeAnimations } from './stroke';
import { initQuiz } from './quiz';

// Initialize everything on DOM load
document.addEventListener('DOMContentLoaded', () => {
  // Initialize store first (handles persistence)
  initStore();
  
  // Initialize SRS system
  initSRS();
  
  // Initialize TTS system
  initTTS();
  
  // Initialize stroke animations
  initStrokeAnimations();
  
  // Initialize quiz system
  initQuiz();
  
  // Initialize UI last (depends on data being loaded)
  initApp();
});

// Handle service worker registration for PWA
if ('serviceWorker' in navigator) {
  window.addEventListener('load', () => {
    navigator.serviceWorker.register('/sw.js')
      .then(registration => {
        console.log('ServiceWorker registration successful:', registration.scope);
      })
      .catch(error => {
        console.log('ServiceWorker registration failed:', error);
      });
  });
}

// Check for PWA installability
let deferredPrompt: any = null;

window.addEventListener('beforeinstallprompt', (e) => {
  // Prevent the mini-infobar from appearing on mobile
  e.preventDefault();
  // Stash the event so it can be triggered later.
  deferredPrompt = e;
  // Update UI to notify the user they can install the PWA
  const installButton = document.getElementById('install-button');
  if (installButton) {
    installButton.classList.remove('hidden');
  }
});

// Handle user clicking the install button
document.addEventListener('click', async (e) => {
  if ((e.target as HTMLElement).id === 'install-button') {
    if (deferredPrompt) {
      // Show the install prompt
      deferredPrompt.prompt();
      // Wait for the user to respond to the prompt
      const { outcome } = await deferredPrompt.userChoice;
      console.log(`User response to the install prompt: ${outcome}`);
      // We no longer need the prompt, so clear it up
      deferredPrompt = null;
    }
  }
});